"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4524],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>s});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var m=n.createContext({}),p=function(e){var t=n.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,m=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=p(r),s=o,y=f["".concat(m,".").concat(s)]||f[s]||u[s]||l;return r?n.createElement(y,a(a({ref:t},c),{},{components:r})):n.createElement(y,a({ref:t},c))}));function s(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,a=new Array(l);a[0]=f;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<l;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7735:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const l={title:"ideas of memory pool",tags:["memory","pool"]},a=void 0,i={permalink:"/blog/2022/07/03/mem-pool",source:"@site/blog/2022-07-03-mem-pool.md",title:"ideas of memory pool",description:"the key information to implement a memory pool",date:"2022-07-03T00:00:00.000Z",formattedDate:"July 3, 2022",tags:[{label:"memory",permalink:"/blog/tags/memory"},{label:"pool",permalink:"/blog/tags/pool"}],readingTime:.35,truncated:!1,authors:[],frontMatter:{title:"ideas of memory pool",tags:["memory","pool"]},prevItem:{title:"How to Clear Cache in Linux?",permalink:"/blog/2022/07/18/clean-buff-cache"},nextItem:{title:"memory leak",permalink:"/blog/2022/06/30/memory-leak"}},m={authorsImageUrls:[]},p=[{value:"the key information to implement a memory pool",id:"the-key-information-to-implement-a-memory-pool",level:2}],c={toc:p};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"the-key-information-to-implement-a-memory-pool"},"the key information to implement a memory pool"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"boundary:")),(0,o.kt)("p",null,"How to solve the boundaries between different different chunks"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"name:")),(0,o.kt)("p",null,"How to get an allocated memory chunk"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"reference count")),(0,o.kt)("p",null,"whether the chunk is still used. I want to free the memory only if the process termination or free, with threads free, only do reference count minus 1."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"data structure:")),(0,o.kt)("p",null,"which data structure will be efficient?"))}u.isMDXComponent=!0}}]);